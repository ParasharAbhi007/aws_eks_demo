pipeline:
  name: apitest
  identifier: apitest
  projectIdentifier: CSETest1
  orgIdentifier: AbhiOrg
  tags:
    tag1: ""
  stages:
    - stage:
        name: test
        identifier: test
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: k8service
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: |-
                          hostname -f
                          cat /etc/os-release

                          echo "trigger baseCommitSha <+trigger.baseCommitSha>"
                          echo "trigger commitSha <+trigger.commitSha>"
                          echo "trigger repoUrl <+trigger.repoUrl>"
                          echo "trigger sourceBranch <+trigger.sourceBranch>"
                          echo "trigger targetBranch <+trigger.targetBranch>"
                          echo "payload.pull_request.merge_commit_sha <+trigger.payload.pull_request.merge_commit_sha>"
                          echo "trigger.payload.pull_request.merged <+trigger.payload.pull_request.merged>"
                          echo "DRONE_BUILD_PARENT=$DRONE_BUILD_PARENT"
                          echo "========"
                          env |sort
                          echo "========"
                          PWD_VAR="${PWD}"

                          echo pipeline.triggeredBy.triggerIdentifier = <+pipeline.triggeredBy.triggerIdentifier> 
                          echo pipeline.triggerType = <+pipeline.triggerType>
                          echo pipeline.triggeredBy.name = <+pipeline.triggeredBy.name>
                          echo trigger.header-X-GitHub-Event = <+trigger.header['X-GitHub-Event']>
                          echo trigger.event = <+trigger.event>

                          echo "===================="
                          echo "===================="
                          echo "===================="

                          echo "foorrrrrrrrrrrrrrrrrrrrrrrrrrrrrr"
                          echo <+trigger>

                          for var in <+trigger>;
                          do

                              IFS=":"
                              read -r key value <<< "$var"
                              unset IFS
                              echo "$key : $value"

                          done

                          echo "===================="
                          echo "===================="
                          echo "===================="


                          for crumbs in <+trigger.payload>;
                          do

                              IFS=":"
                              read -r crumbskey crumbsvalue <<< "$crumbs"
                              unset IFS
                              echo "$crumbskey : $crumbsvalue"

                          done
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
            rollbackSteps: []
          environments:
            metadata:
              parallel: true
            values:
              - environmentRef: ECS_INFRA
                deployToAll: false
                infrastructureDefinitions:
                  - identifier: ee
              - environmentRef: K8Env
                deployToAll: false
                infrastructureDefinitions:
                  - identifier: K8INFRA
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: MarkAsFailure
        when:
          pipelineStatus: All
  variables:
    - name: fds
      type: String
      description: ""
      required: false
      value: <+input>
    - name: key
      type: String
      description: ""
      required: false
      value: https://hooks.slack.com/services/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
    - name: value
      type: String
      description: ""
      required: false
      value: https://hooks.slack.com/services/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
  notificationRules:
    - name: test
      identifier: test
      pipelineEvents:
        - type: AllEvents
      notificationMethod:
        type: Slack
        spec:
          userGroups: []
          webhookUrl: <+pipeline.variables.key>
      enabled: false
